-- CompilerCache.lua
-- RDX - Raid Data Exchange
-- (C)2006 Raid Informatics
--
-- A system for storing compiled code generated by RDX internals and retrieving
-- it for later viewing.
local ccCache = {};

-- Store the cache for public access
RDXM_Debug.ccCache = ccCache;

function RDXM_Debug.StoreCompiledObject(key, value)
	ccCache[key] = value;
end

function RDXM_Debug.IsStoreCompiledObject(key)
	if ccCache[key] then return true; else return nil; end
end

function RDXM_Debug.GetStoreCompiledObject(key)
	return ccCache[key];
end

-- Register a menu hook to view compiled code on path entries that have it.
RDXDB.RegisterObjectMenuHandler(function(mnu, opath, dialog)
	if ccCache[opath] then
		local x = tostring(ccCache[opath]);
		table.insert(mnu, {
			text = "View Compiled Code...";
			func = function() VFL.poptree:Release(); VFL.Debug_ShowCode(x);	end;
		});
	end
end);

--local function EnableStoreCompiler()
--	RDXG.cdebug = true;
--	VFLReloadUI();
--end

--local function DisableStoreCompiler()
--	RDXG.cdebug = nil;
--end

function RDXM_Debug.ToggleStoreCompiler()
	if RDXG.RDXopt and RDXG.RDXopt.scc then
		DisableStoreCompiler();
		RDX.printI(VFLI.i18n("Disable Store Compiler"));
	else
		EnableStoreCompiler();
		RDX.printI(VFLI.i18n("Enable Store compiler"));
	end
end

function RDXM_Debug.IsStoreCompilerActive()
	if RDXG.RDXopt then
		return RDXG.RDXopt.scc;
	end
end

-- party with me

local function EnablePartyIncludeMe()
	--RDXG.pdebug = true;
	local mbo = RDXDB.TouchObject("RDXDiskSystem:default:Party_fset");
	if mbo.ty == "SymLink" then
		mbo.ty = "FilterSet";
		mbo.version = 1;
		mbo.data = {
			"and", -- [1]
			{
				"mygroup", -- [1]
			}, -- [2]
			{
				"not", -- [1]
				{
					"me", -- [1]
				}, -- [2]
			}, -- [3]
		};
	end
	VFL.empty(mbo.data);
	table.insert(mbo.data, "and");
	table.insert(mbo.data, {"mygroup"});
	local inst = RDXDB.GetObjectInstance("default:Party_fset", true);
	if inst then inst:SetFilter(mbo.data); end
end

local function DisablePartyIncludeMe()
	--RDXG.pdebug = nil;
	local mbo = RDXDB.TouchObject("RDXDiskSystem:default:Party_fset");
	if mbo.ty == "SymLink" then
		mbo.ty = "FilterSet";
		mbo.version = 1;
		mbo.data = {
			"and", -- [1]
			{
				"mygroup", -- [1]
			}, -- [2]
			{
				"not", -- [1]
				{
					"me", -- [1]
				}, -- [2]
			}, -- [3]
		};
	end
	VFL.empty(mbo.data);
	table.insert(mbo.data, "and");
	table.insert(mbo.data, {"mygroup"});
	table.insert(mbo.data, {"not", {"me"}});
	local inst = RDXDB.GetObjectInstance("default:Party_fset", true);
	if inst then inst:SetFilter(mbo.data); end
end

--function RDXM_Debug.TogglePartyIncludeMe()
--	if RDXG.pdebug then
--		DisablePartyIncludeMe();
--	else
--		EnablePartyIncludeMe();
--	end
--	ReloadUI();
--end

function RDXM_Debug.IsPartyIncludeMe()
	if RDXG.RDXopt then
		return RDXG.RDXopt.pwm;
	end
end

-----------------------------------
-- init
-----------------------------------

RDXEvents:Bind("INIT_VARIABLES_LOADED", nil, function()
	if RDXM_Debug.IsStoreCompilerActive() then 
		RDX.printW("Store Compiler code Activated !!!");
	end
	if RDXM_Debug.IsPartyIncludeMe() then
		EnablePartyIncludeMe();
	else
		DisablePartyIncludeMe();
	end
end);
