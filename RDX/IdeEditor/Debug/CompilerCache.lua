-- CompilerCache.lua
-- RDX - Raid Data Exchange
-- (C)2006 Raid Informatics
--
-- A system for storing compiled code generated by RDX internals and retrieving
-- it for later viewing.
local ccCache = {};

-- Store the cache for public access
RDXM_Debug.ccCache = ccCache;

function RDXM_Debug.StoreCompiledObject(key, value)
	ccCache[key] = value;
end

function RDXM_Debug.IsStoreCompiledObject(key)
	if ccCache[key] then return true; else return nil; end
end

function RDXM_Debug.GetStoreCompiledObject(key)
	return ccCache[key];
end

-- Register a menu hook to view compiled code on path entries that have it.
RDXDB.RegisterObjectMenuHandler(function(mnu, opath, dialog)
	if ccCache[opath] then
		local x = tostring(ccCache[opath]);
		table.insert(mnu, {
			text = "View Compiled Code...";
			OnClick = function() VFL.poptree:Release(); VFL.Debug_ShowCode(x);	end;
		});
	end
end);

local function EnableStoreCompiler()
	RDXG.cdebug = true;
	VFLReloadUI();
end

local function DisableStoreCompiler()
	RDXG.cdebug = nil;
end

function RDXM_Debug.ToggleStoreCompiler()
	if RDXG.cdebug then
		DisableStoreCompiler();
		RDX.printI(VFLI.i18n("Disable Store Compiler"));
	else
		EnableStoreCompiler();
		RDX.printI(VFLI.i18n("Enable Store compiler"));
	end
end

function RDXM_Debug.IsStoreCompilerActive()
	return RDXG.cdebug;
end

-- party with me

local function EnablePartyIncludeMe()
	RDXG.pdebug = true;
	local mbo = RDXDB.TouchObject("default:Party_fset");
	mbo.ty = "SymLink"; mbo.version = 3; mbo.data = {class = "simple", targetpath = "default:Party_with_me_fset"};
	--RDXDB.NotifyUpdate("default:Party_fset");
	RDXEvents:Dispatch("DISRUPT_WINDOWS");
end

local function DisablePartyIncludeMe()
	RDXG.pdebug = nil;
	local mbo = RDXDB.TouchObject("default:Party_fset");
	mbo.ty = "SymLink"; mbo.version = 3; mbo.data = {class = "simple", targetpath = "default:Party_without_me_fset"};
	--RDXDB.NotifyUpdate("default:Party_fset");
	RDXEvents:Dispatch("DISRUPT_WINDOWS");
end

function RDXM_Debug.TogglePartyIncludeMe()
	if RDXG.pdebug then
		DisablePartyIncludeMe();
	else
		EnablePartyIncludeMe();
	end
end

function RDXM_Debug.IsPartyIncludeMe()
	return RDXG.pdebug;
end

-----------------------------------
-- init
-----------------------------------

RDXEvents:Bind("INIT_VARIABLES_LOADED", nil, function()
	if RDXG.cdebug then 
		RDX.printW("Store Compiler code Activated !!!");
	end
	if RDXG.pdebug then
		EnablePartyIncludeMe();
	else
		DisablePartyIncludeMe();
	end
end);
